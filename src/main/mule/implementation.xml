<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc"
	xmlns:american-flights-api="http://www.mulesoft.org/schema/mule/american-flights-api" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/american-flights-api http://www.mulesoft.org/schema/mule/american-flights-api/current/mule-american-flights-api.xsd
http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
	<flow name="implementationFlow" doc:id="a1e4885e-52b3-47b6-8ba2-2e55fbc24883" >
		<http:listener doc:name="GET /flights" doc:id="86d64ee1-8301-44d1-8244-466cd757d336" config-ref="HTTP_Listener_config" path="/flights" allowedMethods="GET">
			<http:response statusCode="#[vars.httpStatus default 200]" />
			<http:error-response statusCode="#[vars.httpStatus default 500]">
				<http:body ><![CDATA[#[payload]]]></http:body>
			</http:error-response>
		</http:listener>
		<set-variable value="#[attributes.queryParams.airline]" doc:name="airline" doc:id="b52f81a8-1788-46f3-8856-ae3a19da0b2c" variableName="airline"/>
		<set-variable value="#[attributes.queryParams.code]" doc:name="setCode" doc:id="91e4f9f8-3a20-4a48-907d-3d931a7000bf" variableName="code" />
		<validation:is-true doc:name="Is valid destination" doc:id="69c66068-b97a-492f-8ae5-17f417d2398b" expression="#[['SFO','LAX','CLE','PDX','PDF'] contains vars.code]" message="#['Invalid destination' ++ ' ' ++ (vars.code default ' ')]"/>
		<choice doc:name="Choice" doc:id="5ebf17ca-4ec5-4bac-ab20-764881a208c6" >
			<when expression="#[vars.airline == 'american']">
				<flow-ref doc:name="getAmericanFlights" doc:id="91cfb393-136b-46b4-9a98-9cb7fdcf6e11" name="getAmericanFlights" />
			</when>
			<when expression="#[vars.airline == 'united']">
				<flow-ref doc:name="getUnitedFlights" doc:id="524cbd5a-b850-4d7c-b050-1800b3429915" name="getUnitedFlights" />
			</when>
			<when expression="#[vars.airline == 'delta']">
				<flow-ref doc:name="getDeltaFlights" doc:id="615f3c34-d68c-4586-bc10-ea33237d8f27" name="getDeltaFlights" />
			</when>
			<otherwise >
				<flow-ref doc:name="getAllFlights" doc:id="6b17fc93-6abd-45e7-9aba-4b68c14eab4f" name="getAllFlights"/>
			</otherwise>
		</choice>
		<ee:transform doc:name="[Flight] to JSON" doc:id="bcef0194-cbc1-41a0-bf87-ca173f5109b5" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="forGetTransactions" ><![CDATA[%dw 2.0
output application/xml
ns ns0 http://training.mulesoft.com/
var flightID = (item) -> upper(item.airlineName default '' ++ item.flightCode default '' ++ item.departureDate default '' as String {format: "yyyy-MM-dd"})
---
ns0#GetTransactionsforFlights: {
	(
		payload map (object, index)-> {
			flightID:  flightID(object)
		}
	)
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="getTransactionsforFlights" doc:id="eae4bc30-52d9-4de8-90f0-911413b7e98d" name="getTransactionsforFlights"/>
		<ee:transform doc:name="Transform Message" doc:id="fd2c3697-11c5-4f6c-b264-ed042ffe86f5" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
var flightID = (item) -> upper(item.airlineName default '' ++ item.flightCode default '' ++ item.departureDate default '' as String {format: "yyyy-MM-dd"})
var account = (id) -> (vars.accountsResponse filter ($.accountID == id))[0]

---
forFlights: {
	(
		payload map (object, index)-> {
			flight @(flightCode: object.flightCode): { 
				airline: object.airline,
				departureDate: object.departureDate as Date {format: "yyyy-MM-dd"} as String {format: "yyyy-MMM-dd"},
				emptySeats: object.availableSeats,
				fromAirportCode: object.origination,
				planeType: object.planeType,
				price: object.price,
				flightID: flightID(object),
				toAirportCode: object.destination,
				transactions: (vars.transactionsResponse filter ($.flightID == flightID(object))) map (trans, trans_idx) -> {
						transaction @(transID: trans.transactionID,
							          amount: trans.amount ): { 
						idCustomer: trans.customerRef,
						nameCustomer: account(trans.customerRef).name,
						'type': account(trans.customerRef).accountType,
						amountUSFormatted: trans.amount as Number as String {format: "###,###.00"}
					}
				}
			}
		}
	)
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="664ec66e-89f9-4637-a383-3fc5c2a9349d" />
		<error-handler>
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="cdb40fe1-3cfd-45ff-be26-0c9addc6ca12" type="VALIDATION:INVALID_BOOLEAN">
				<ee:transform doc:name="error.description" doc:id="42f8983e-d828-43ee-b050-be1191590927" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: error.description
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="400" doc:name="httpStatus" doc:id="3cfc77e4-e1be-46f8-9639-0cbbc9fb6918" variableName="httpStatus" />
			</on-error-continue>
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="7e578036-d166-47ae-ac19-a369f84e4013" type="ANY">
				<ee:transform doc:name="No flights" doc:id="a783c8f1-19c9-465c-9b5d-39f59669c30f">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	message: "No flights to " ++ vars.code as String
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="200" doc:name="httpStatus" doc:id="c48a024e-f00e-40c2-a714-f480a9e83e1c" variableName="httpStatus" />
			</on-error-propagate>
		</error-handler>
	</flow>
	<flow name="getAllFlights" doc:id="fe8db97c-7282-4cf6-b420-6ce6394de42c" >
		<scatter-gather doc:name="Scatter-Gather" doc:id="9431bec4-9c87-4179-9bf7-a0cc4981d19f" >
			<route >
				<try doc:name="Try" doc:id="b968b693-dd23-48f6-a400-b9f43b411cf3" >
					<flow-ref doc:name="getAmericanFlights" doc:id="d11a1f15-9c68-40a6-aca2-3057f0d8de88" name="getAmericanFlights" />
				</try>
			</route>
			<route >
				<try doc:name="Try" doc:id="896ec8f6-cce9-4de7-bf3d-0f7da71ec6ac" >
					<flow-ref doc:name="getUnitedFlights" doc:id="0b5d8643-c743-45ab-aa89-4f096d75ce36" name="getUnitedFlights" />
				</try>
			</route>
			<route >
				<try doc:name="Try" doc:id="b69b0594-3d23-4fa5-a421-7ecb54156fc1" >
					<flow-ref doc:name="getDeltaFlights" doc:id="1512616c-4d73-476a-91b7-c6c25383b55f" name="getDeltaFlights" />
				</try>
			</route>
		</scatter-gather>
		<ee:transform doc:name="flatten to [Flight]" doc:id="5379298e-5856-4c39-9bbd-f6861f6b6a4f" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
flatten(payload..payload)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="7e67dd21-5426-4bcc-9741-bc02cf513653" />
	</flow>
	<flow name="getAmericanFlights" doc:id="98721b31-28d0-4049-9a2f-73c3ef7af64a" >
		<american-flights-api:get-flights doc:name="Get flights" doc:id="b10d344f-e79e-4988-a479-33bbe180b1db" client-id="${american.client_id}" client-secret="${american.client_secret}" config-ref="American_Flights_API_Config" destination="#[vars.code]"/>
		<ee:transform doc:name="JSON to [Flight]" doc:id="9db2761c-fa13-4c85-92d6-a3f687362b91" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload map ( payload01 , indexOfPayload01 ) -> {
	airlineName: "American",
	availableSeats: payload01.emptySeats,
	departureDate: payload01.departureDate as Date as String,
	destination: payload01.destination,
	flightCode: payload01.code,
	origination: payload01.origin,
	planeType: payload01.plane."type",
	price: payload01.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="7aea999e-f1e2-4f1a-a719-75ea38e041e5" />
	</flow>
	<flow name="getUnitedFlights" doc:id="3058cd4c-4304-4e1d-b808-0c7d5a093b47" >
		<http:request method="GET" doc:name="Get flights" doc:id="6f044c3d-bb66-461f-879a-c9f1aa60f468" config-ref="HTTP_Request_config_training" path="/united/flights/{dest}">
			<http:uri-params ><![CDATA[#[output application/java
---
{
	"dest" : vars.code
}]]]></http:uri-params>
		</http:request>
		<ee:transform doc:name="JSON to [Flight]" doc:id="556bec08-4808-44b7-977a-f758b79f2b17" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload.flights map ( flight , indexOfFlight ) -> {
	airlineName: flight.airlineName,
	availableSeats: flight.emptySeats,
	departureDate: flight.departureDate as Date {format: "yyyy/MM/dd"} as String,
	destination: flight.destination,
	flightCode: flight.code,
	origination: flight.origin,
	planeType: flight.planeType,
	price: flight.price
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="b976cba4-542d-46f1-85d5-cfaa58a641ee" />
	</flow>
	<flow name="getDeltaFlights" doc:id="552cfb6b-2089-4f75-bec6-eec0639f425c" >
		<ee:transform doc:name="Transform Message" doc:id="8ff62512-b1c3-420f-8009-19ef06cc0797" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns ns0 http://soap.training.mulesoft.com/
---
{
	ns0#findFlight: {
		destination: vars.code as String
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<wsc:consume operation="findFlight" doc:name="Get flights" doc:id="c9ba66eb-d460-4c08-a022-caa61d0ebeff" config-ref="Delta_Web_Service_Consumer_Config"/>
		<ee:transform doc:name="SOAP to [Flight]" doc:id="8639c615-d9eb-4ec1-a5d9-82f6d9639955" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
ns ns0 http://soap.training.mulesoft.com/
---
payload.body.ns0#findFlightResponse.*return map ( return , indexOfReturn ) -> {
	airlineName: return.airlineName,
	availableSeats: return.emptySeats,
	departureDate: return.departureDate as Date {format: "yyyy/MM/dd"} as String,
	destination: return.destination,
	flightCode: return.code,
	origination: return.origin,
	planeType: return.planeType,
	price: return.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="802edb15-6e3d-4196-ab31-8a4bc3a4e737" />
	</flow>
	<flow name="postFlight" doc:id="1956f216-58aa-482a-9a57-cd22263b47a3">
		<ee:transform doc:name="Transform Message" doc:id="48dd4d6d-3ea8-412b-89a6-2c318b44772f" >
			<ee:message >
				<ee:set-payload resource="json_flight_playground.dwl" />
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="DWoutput" ><![CDATA[%dw 2.0
output application/xml
---
payload]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="db01303c-0a84-42a3-bb86-e2160af00db3" />
	</flow>
	<flow name="getTotalSeats" doc:id="9464a5e8-9042-441a-a3a5-0597e09acdbe" >
		<ee:transform doc:name="Transform Message" doc:id="4d2420f8-d16f-4765-bdb0-e217671e0f80" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
fun getNumSeats(planeType: String) =
	if (planeType contains('737'))150
    else 300
---
getNumSeats(payload.planeType as String)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="postMultipleFlights" doc:id="3377c032-0de3-4f04-a957-20b8ebea97be" >
		<http:listener doc:name="POST /multipleFlights" doc:id="6aef4c04-e9e7-46d6-acff-786128622067" config-ref="HTTP_Listener_config" path="/multipleFlights" allowedMethods="POST"/>
		<ee:transform doc:name="Transform Message" doc:id="725ccaf4-b513-4167-9c7b-d539dccef687" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/dw
import dasherize from dw::core::Strings
type Flight = Object {class: "com.mulesoft.training.Flight"}
type Currency = String {format: "###.00"}
//var numSeats = 400
var numSeats = (planeType: String) -> 
	if (planeType contains("737")) 150
	else 300
fun getNumSeats(planeType: String) =
	if (planeType contains('737'))150
    else 300
---
using (flights = 
	payload..*return map(object, index) -> {
		destination: object.destination,
		price: object.price as Number as Currency,
		totalSeats: lookup("getTotalSeats",{planeType: object.planeType}),
		//availableSeats: object.emptySeats as Number,
		//totalSeats: getNumSeats(object.planeType as String),
		planeType: dasherize(replace(object.planeType,/(Boing)/) with "Boeing"),
		departureDate: object.departureDate as Date {format: "yyyy/MM/dd"} as String {format: "MMM dd, yyyy"}
	} as Object
)

flights 
	orderBy $.departureDate
	orderBy $.price
	distinctBy $
	filter ($.availableSeats !=0)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="dfcda2a0-a039-448b-af95-eb23c4fb6536" />
	</flow>
	<flow name="implementationFlow1" doc:id="c2185b9a-e87a-4b6f-acf5-77a242380823" >
		<http:listener doc:name="Listener" doc:id="0a3b157e-0579-4aa2-a6f1-10bd46520ee9" config-ref="HTTP_Listener_config" path="/transactionsforFlights" allowedMethods="POST" />
		<set-payload value="testing" doc:name="Set Payload" doc:id="bce0ef39-0483-4a2d-a47d-b73e75f44401" />
	</flow>
	<flow name="getTransactionsforFlights" doc:id="289bf163-ba41-4ad7-b8f7-81d454d73255" >
		<wsc:consume doc:name="Consume" doc:id="31a89102-bed1-42ba-aef9-51437ed62f34" config-ref="Transation_Web_Service_Consumer_Config" operation="GetTransactionsforFlights" target="geTtarnsactionsWsResponse">
			<wsc:message >
				<wsc:body ><![CDATA[#[vars.forGetTransactions]]]></wsc:body>
			</wsc:message>
		</wsc:consume>
		<ee:transform doc:name="Transform Message" doc:id="51455f5f-25e9-49ee-96ce-a76451ae7b82" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="getAccountsRequest" ><![CDATA[%dw 2.0
output application/json
ns ns0 http://training.mulesoft.com/
---
vars.geTtarnsactionsWsResponse.body.ns0#GetTransactionsforFlightsResponse.*transaction.customerRef]]></ee:set-variable>
				<ee:set-variable variableName="transactionsResponse" ><![CDATA[%dw 2.0
output application/json
ns ns0 http://training.mulesoft.com/
---
vars.geTtarnsactionsWsResponse.body.ns0#GetTransactionsforFlightsResponse.*transaction]]></ee:set-variable>
			</ee:variables>
		
</ee:transform>
		<http:request method="POST" doc:name="Request" doc:id="c1dcc27f-7820-4529-ac44-9436d4b124ac" config-ref="Transaction_HTTP_Request_configuration" path="/accountList" target="accountsResponse" targetValue='#[read(payload, "output application/json")]'>
			<http:body><![CDATA[#[vars.getAccountsRequest]]]></http:body>
			<http:headers><![CDATA[#[output application/java
---
{
	"Requester-ID" : "Test"
}]]]></http:headers>
		</http:request>
	
</flow>
	<flow name="getAccounts" doc:id="c6dc02f2-b1b0-4bb9-9d71-dfdfb32e9fcd" >
		<ee:transform doc:name="Transform Message" doc:id="c6f2c91c-9696-4cf7-84ac-5c8060e827e1" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
			<ee:variables >
			</ee:variables>
		
</ee:transform>
	</flow>

</mule>
